#!/bin/bash


FILETITLE="$1"
TARGET="$PWD/$FILETITLE.sql"
CONFIGFILE="$PWD/$FILETITLE.conf"
OUTPUT="$PWD/$FILETITLE.pdf"
TMPDIR="$(mktemp -d)"
LATEX_MAIN="$TMPDIR/main.tex"
LATEX_BODY="$TMPDIR/body.tex"

ln -s -f $TMPDIR debug

load_config() {
  if [ ! -f "$CONFIGFILE" ]; then
    cat <<EOF > "$CONFIGFILE"
DOCUMENT_LANGUAGE="english"
DOCUMENT_TITLE="My research report"
DOCUMENT_AUTHOR="Espen Andersen"
MYSQL_HOST="mysql"
MYSQL_PORT="3306"
MYSQL_USER="root"
MYSQL_PASS="secret"
EOF
  fi
  source "$CONFIGFILE"
}

write_latex_main() {
  cat <<EOF > "$LATEX_MAIN"
  \documentclass[10pt,a4paper]{article}
  \usepackage[T1]{fontenc}
  \usepackage[utf8]{inputenc}
  \usepackage{amsmath}
  \usepackage{amsfonts}
  \usepackage{amssymb}
  \usepackage{makeidx}
  \usepackage{graphicx}
  \usepackage{lmodern}
  \usepackage{parskip}
  \usepackage{kpfonts}
  \usepackage[left=2.5cm,right=2.5cm,top=2.5cm,bottom=3cm]{geometry}
  \usepackage{pgfplotstable}
  \usepackage{booktabs}
  \usepackage{tabularx}
  \usepackage{array}
  \usepackage{colortbl}
  \usepackage{placeins}
  \usepackage[$DOCUMENT_LANGUAGE]{babel}
  \renewcommand{\arraystretch}{1.2}
  \pgfplotstableset {
  	column type=,
  	end table={\end{tabularx}},
  	col sep=comma,
  	string type,
  	every head row/.style={after row=\hline\rule{0pt}{4.5mm}},
  	every head row/.append style={
          typeset cell/.code={
  			\ifnum\pgfplotstablecol=\pgfplotstablecols
          			\pgfkeyssetvalue{/pgfplots/table/@cell content}{\textbf{##1}\\\\}
          		\else
          			\pgfkeyssetvalue{/pgfplots/table/@cell content}{\textbf{##1}&}
          		\fi
          	}
      },
  	every last row/.style={after row=\hline\rule{0pt}{4.5mm}}
  }
  \title{$DOCUMENT_TITLE}
  \author{$DOCUMENT_AUTHOR}
  \begin{document}
  	\maketitle
  	\newpage
  	\tableofcontents
  	\newpage
  	\begin{flushleft}
  	\input{body.tex}
  	\end{flushleft}
  \end{document}
EOF
}

prepare_queries() {
  csplit --digits=2 --elide-empty-files --quiet --prefix="$TMPDIR/$FILETITLE." "$TARGET" "/\/\*\*/" "{*}"; \
}

build() {
  echo "" > "$LATEX_BODY"
  for file in $(find "$TMPDIR" -name "$FILETITLE.*" -not -name "$FILETITLE.*.csv" | sort);
  	do
  		title="$(pcregrep -Mo 'subsection\{\K((?s).)*?(?=\})' $file)"
  		latex="$(pcregrep -Mo '<LATEX>\K((?s).)*?(?=</LATEX>)' $file)"
  		alignment="$(pcregrep -Mo '<COLS>\K((?s).)*?(?=</COLS>)' $file)"
  		echo " ---> $title ($alignment)"
  		csvfile="$(basename $file).csv"
      if [ -f "$TMPDIR/$csvfile" ]; then
        # Do queries on second run
        MYSQL_PWD=$MYSQL_PASS mysql -h$MYSQL_HOST -u$MYSQL_USER < $file | sed 's/,/\\char44\{\}/g' | sed 's/_/\\char95\{\}/g' | sed 's/|/\\char124\{\}/g'| sed 's/%/\\char37\{\}/g'| sed 's/ /\\:/g' | sed 's/\t/,/g' | iconv -f ISO-8859-1 -t UTF-8 >> "$TMPDIR/$csvfile"
      else
        # No queries on first run, just create empty data files
        touch "$TMPDIR/$csvfile"
      fi
  		echo "\\begin{minipage}{\\textwidth}" >> "$LATEX_BODY"
      echo "\\setlength{\\parskip}{\\baselineskip}" >> "$LATEX_BODY"
  		echo "$latex" >> "$LATEX_BODY"
  		echo "\\medskip\\FloatBarrier" >> "$LATEX_BODY"
  		printf "\\pgfplotstabletypeset[begin table={\\\\begin{tabularx}{\\\\textwidth}{%s}}]{%s}\n" \
  					 "$alignment" \
  					 "$csvfile" \
  					 >> "$LATEX_BODY"
  		echo "\\FloatBarrier" >> "$LATEX_BODY"
  		echo "\\end{minipage}" >> "$LATEX_BODY"
  		echo "\\bigskip" >> "$LATEX_BODY"
  done
  ( cd "$TMPDIR" && pdflatex main.tex )
}

load_config
i=0
# Run build process twice to generate TOC, and to catch LaTEX errors before
# starting potentially time consuming SQL queries.
while [ "$i" -lt 2 ]
do
  write_latex_main
  prepare_queries
  build
  i=`expr $i + 1`
done
mv "$TMPDIR/main.pdf" "$OUTPUT"
rm -rf "$TMPDIR"
